[{"D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\bot.ts":"1","D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\createListeningStream.ts":"2","D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\deploy.ts":"3","D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\interactions.ts":"4"},{"size":1815,"mtime":1694435466664,"results":"5","hashOfConfig":"6"},{"size":1131,"mtime":1691077381093,"results":"7","hashOfConfig":"6"},{"size":589,"mtime":1694434413285,"results":"8","hashOfConfig":"6"},{"size":2802,"mtime":1694435010727,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"1aowabf",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\bot.ts",["23"],["24","25"],"import { getVoiceConnection } from '@discordjs/voice';\nimport { GatewayIntentBits } from 'discord-api-types/v10';\nimport { Interaction, Constants, Client } from 'discord.js';\nimport { deploy } from './deploy';\nimport { interactionHandlers } from './interactions';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\nconst { token } = require('../config.json') as { token: string };\n\nconst client = new Client({\n\tintents: [GatewayIntentBits.GuildVoiceStates, GatewayIntentBits.GuildMessages, GatewayIntentBits.Guilds],\n});\n\nconst { Events } = Constants;\n\nclient.on('ready', async (client) => {\n\tconst guilds = await client.guilds.fetch();\n\tfor (const partialGuild of guilds) {\n\t\tconst guild = await partialGuild[1].fetch()\n\t\tawait deploy(guild);\n\t\tconsole.log(`Guild \"${guild.name}\" deployed!`);\n\t}\n\tconsole.log('Ready!')\n});\n\n// client.on('messageCreate', async (message) => {\n// \tif (!message.guild) return;\n// \tif (!client.application?.owner) await client.application?.fetch();\n\n\n// \tif (message.content.includes('!deploy') && message.author.id === client.application?.owner?.id) {\n// \t\tawait deploy(message.guild);\n// \t\tawait message.reply('Deployed!');\n// \t}\n// });\n\n/**\n * The IDs of the users that can be recorded by the bot.\n */\nconst recordable = new Set<string>();\n\nclient.on('interactionCreate', async (interaction: Interaction) => {\n\tif (!interaction.isCommand() || !interaction.guildId) return;\n\tconst handler = interactionHandlers.get(interaction.commandName);\n\n\ttry {\n\t\tif (handler) {\n\t\t\tawait handler(interaction, recordable, client, getVoiceConnection(interaction.guildId));\n\t\t} else {\n\t\t\tawait interaction.reply('Unknown command');\n\t\t}\n\t} catch (error) {\n\t\tconsole.warn(error);\n\t}\n});\n\nclient.on('error', console.warn);\n\nvoid client.login(token);\n","D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\createListeningStream.ts",[],[],"D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\deploy.ts",[],[],"D:\\DEV\\discord-recordsman\\voice-examples\\recorder\\src\\interactions.ts",[],[],{"ruleId":"26","severity":2,"message":"27","line":14,"column":9,"nodeType":"28","messageId":"29","endLine":14,"endColumn":15},{"ruleId":"30","severity":2,"message":"31","line":8,"column":19,"nodeType":"32","messageId":"33","endLine":8,"endColumn":44,"suppressions":"34"},{"ruleId":"35","severity":2,"message":"36","line":8,"column":19,"nodeType":"32","messageId":"37","endLine":8,"endColumn":44,"suppressions":"38"},"@typescript-eslint/no-unused-vars","'Events' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-require-imports","A `require()` style import is forbidden.","CallExpression","noRequireImports",["39"],"@typescript-eslint/no-var-requires","Require statement not part of import statement.","noVarReqs",["40"],{"kind":"41","justification":"42"},{"kind":"41","justification":"42"},"directive",""]